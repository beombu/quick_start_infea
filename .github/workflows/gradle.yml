# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean bootJar

    # 3. Docker 이미지 빌드
    - name : docker image build
      run : docker build -t ${{ secrets.USERNAME }}/quick_start_infra .

    # 4. DockerHub 로그인
    - name : docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}

    # 5. Docker Hub 이미지 푸시
    - name : docker Hub push
      run: docker push ${{ secrets.USERNAME }}/quick_start_infra

    # 6. Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ec2-43-200-114-114.ap-northeast-2.compute.amazonaws.com
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull ${{ secrets.USERNAME }}/quick_start_infra
          docker tag ${{ secrets.USERNAME }}/quick_start_infra quick_start_infra
          docker stop server
          docker run -d --rm --name server -p 8080:8080 quick_start_infra
